apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

group = 'id.co.veritrans'
version = '0.10.8'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.2'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}
repositories {
    jcenter()
}

android {
    def DEFAULT_PUBLISH
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 2
        versionName version
        buildConfigField "String", "MIXPANEL_URL", "\"https://api.mixpanel.com/\""
        buildConfigField "String", "CALLBACK_STRING", "\"/token/callback/\""
        buildConfigField "String", "CALLBACK_URL", "\"https://hangout.betas.in/veritrans/api/paymentstatus\""
        buildConfigField "String", "BBM_MONEY_PACKAGE", "\"com.monitise.client.android.bbmmoney\""
        buildConfigField "String", "MARKET_URL", "\"market://details?id=\""
        buildConfigField "String", "PLAY_STORE_URL", "\"https://play.google.com/store/apps/details?id=\""
        buildConfigField "String", "BBM_PREFIX_URL", "\"bbmmoney://api/payment/imp?data=\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        development {
            DEFAULT_PUBLISH = "developmentRelease"
            buildConfigField "String", "BASE_URL", "\"https://api.sandbox.veritrans.co.id/v2/\""
            buildConfigField "String", "MIXPANEL_TOKEN", MIXPANEL_TOKEN_SANDBOX
        }

        production {
            DEFAULT_PUBLISH = "productionRelease"
            buildConfigField "String", "BASE_URL", "\"https://api.veritrans.co.id/v2/\""
            buildConfigField "String", "MIXPANEL_TOKEN", MIXPANEL_TOKEN_PRODUCTION
        }
    }
    defaultPublishConfig DEFAULT_PUBLISH
    publishNonDefault true
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}
task wrapper(type: Wrapper) {
    gradleVersion = '2.10' //version required
}
dependencies {
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'

    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.squareup.okhttp:okhttp:2.3.0'

    compile 'com.squareup.retrofit:retrofit:1.9.0'
    testCompile 'junit:junit:4.12'
}

publishing {
    publications {
        BintrayPublication(MavenPublication) {
            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/coreflow-development-release.aar")
            groupId group
            artifactId 'coreflow'
            version version + "-SANDBOX"

            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }

        BintrayProductionPublication(MavenPublication) {
            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/coreflow-production-release.aar")
            groupId group
            artifactId 'coreflow'
            version version

            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}

bintray {
    user = System.getenv('rakawm')
    key = System.getenv('655af59215c0cabd17d2b379d0947a69a0a7eba1')
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = project.name
        userOrg = 'pt-midtrans'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/veritrans/veritrans-android.git'
        desc = 'Android SDK for integrating with veritrans.co.id'
        websiteUrl = "https://veritrans.co.id"
        publish = true
        publicDownloadNumbers = true
    }
    publications = ['BintrayProductionPublication', 'BintrayPublication']

}